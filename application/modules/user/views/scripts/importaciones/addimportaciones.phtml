<? if (isset($this->error)) { ?>
    <div class="error"><?= $this->error ?></div>
            <? } ?>
            <? if (isset($this->message)) { ?>
                <div class="msg"><?= $this->message ?></div>
                        <? } ?>
<script type="text/javascript">
		YAHOO.namespace("local.calendar");
		
		YAHOO.local.calendar.init = function() {
			var eLog = YAHOO.util.Dom.get("evtentries");
	
			YAHOO.local.calendar.fechaIngreso = new YAHOO.widget.Calendar("idFechaIngreso","calFechaIngreso");
			YAHOO.local.calendar.fechaIngreso.selectEvent.subscribe(handlerCalFechaIngreso, YAHOO.local.calendar.fechaIngreso, true);
	
			YAHOO.local.calendar.fechaIngreso.render();
		}
		
		YAHOO.util.Event.onDOMReady(YAHOO.local.calendar.init);
</script>


<div style="clear:both"></div>
<? if (isset($this->error)) { ?>
    <div class="error"><?= $this->error ?></div>
<? } ?>
<div class="cformulario">
	<?= $this->importacionAddForm ?>
</div>
<div id="calFechaIngreso" style="display:none;" class="ccalfechaingreso"></div>
<div id="calVencimiento" style="display:none;" class="ccalvencimiento"></div>
<div id="calIngPuerto" style="display:none;" class="ccalingpuerto"></div>
<div id="calPerPre" style="display:none;" class="ccalperpre"></div>
<div id="calFecFac" style="display:none;" class="ccalfecfac"></div>
<div id='form_errorloc' class='errors_js_forms'></div>
<script type="text/javascript">		

        var mySchema = ["Resultset.Result","data","id"];
		
	// banderas
        var dataBanderas = new YAHOO.widget.DS_XHR("/user/banderas/getdata/", mySchema);
        dataBanderas.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteBanderas = new YAHOO.widget.AutoComplete("idnameBandera", "idbanderasautocomplete", dataBanderas);

	// clientes
	var dataClientes = new YAHOO.widget.DS_XHR("/user/clientes/getdata/", mySchema);
        dataClientes.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteClientes = new YAHOO.widget.AutoComplete("idnameCliente", "idclientesautocomplete", dataClientes);

	// transportes
	var dataTransportes = new YAHOO.widget.DS_XHR("/user/transportes/getdata/", mySchema);
        dataTransportes.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteTransportes = new YAHOO.widget.AutoComplete("idnameTransporte", "idtransportesautocomplete", dataTransportes);
		
	// monedas
	var dataMonedas = new YAHOO.widget.DS_XHR("/user/monedas/getdata/", mySchema);
        dataMonedas.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteMonedas = new YAHOO.widget.AutoComplete("idnameMoneda", "idmonedasautocomplete", dataMonedas);

	// cargas
	var dataCargas = new YAHOO.widget.DS_XHR("/user/cargas/getdata/", mySchema);
        dataCargas.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteCargas = new YAHOO.widget.AutoComplete("idnameCarga", "idcargasautocomplete", dataCargas);
		
	// destinaciones
	var dataDestinaciones = new YAHOO.widget.DS_XHR("/user/destinaciones/getdata/", mySchema);
        dataDestinaciones.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteDestinaciones = new YAHOO.widget.AutoComplete("idnameDestinacion", "iddestautocomplete", dataDestinaciones);

	// OPPS
	var dataOpps = new YAHOO.widget.DS_XHR("/user/opps/getdata/", mySchema);
        dataOpps.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteOpps = new YAHOO.widget.AutoComplete("idnameOpp", "idoppsautocomplete", dataOpps);

	// GIROS
	var dataGiros = new YAHOO.widget.DS_XHR("/user/giros/getdata/", mySchema);
        dataGiros.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteGiros = new YAHOO.widget.AutoComplete("idnameGiro", "idgirosautocomplete", dataGiros);
	
	// validacion
	var frmvalidator  = new Validator("form");

	//habilito alert con mensajes
	frmvalidator.EnableOnPageErrorDisplaySingleBox();
	frmvalidator.EnableMsgsTogether();
	
	frmvalidator.addValidation("orden","req","*Ingrese el número de orden");
	frmvalidator.addValidation("orden","numeric","<?= $this->language->_("*La órden debe ser únicamente númerica")?>");
			  
	frmvalidator.addValidation("idnameTransporte","req","<?= $this->language->_("*Elija un transporte")?>");
	frmvalidator.addValidation("idnameTransporte","alnum_s ","<?= $this->language->_("*El transporte debe ser alfanumérico")?>");
			  
	frmvalidator.addValidation("idnameCliente","req","<?= $this->language->_("*Elija un cliente")?>");
	frmvalidator.addValidation("idnameCliente","alpha_s","<?= $this->language->_("*El cliente debe ser alfanumérico")?>");

	frmvalidator.addValidation("idnameBandera","req","<?= $this->language->_("*Elija una Bandera")?>");
	frmvalidator.addValidation("idnameBandera","alpha_s","<?= $this->language->_("*La bandera debe contener sólo letras")?>");

	frmvalidator.addValidation("idnameMoneda","req","<?= $this->language->_("*Elija una moneda")?>");
	frmvalidator.addValidation("idnameMoneda","alpha_s","<?= $this->language->_("*La moneda debe contener sólo letras")?>");

	frmvalidator.addValidation("idnameDestinacion","req","<?= $this->language->_("*Elija una destinación")?>");
	frmvalidator.addValidation("idnameDestinacion","alpha_s","<?= $this->language->_("*La destinación debe contener sólo letras")?>");

	frmvalidator.addValidation("idnameCarga","req","<?= $this->language->_("*Elija una carga")?>");
	frmvalidator.addValidation("idnameCarga","alnum","<?= $this->language->_("*La carga debe contener sólo letras")?>");

	frmvalidator.addValidation("referencia","req","<?= $this->language->_("*Ingrese una referencia")?>");
	frmvalidator.addValidation("referencia","alnum_s","<?= $this->language->_("*La referencia debe ser alfanumérica")?>");

	frmvalidator.addValidation("idFechaIngreso","req","<?= $this->language->_("*Ingrese una fecha de ingreso")?>");
	frmvalidator.addValidation("idFechaIngreso","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$", "<?= $this->language->_("*La fecha de ingreso es inválida")?>");

	frmvalidator.addValidation("desMercaderias","req","<?= $this->language->_("*Ingrese una descripción de mercadería")?>");
	frmvalidator.addValidation("desMercaderias","alnum_s","<?= $this->language->_("*La descripción de mercadería debe ser alfanumérica")?>");

	frmvalidator.addValidation("valorFactura","req","<?= $this->language->_("*Ingrese un valor de factura")?>");
	frmvalidator.addValidation("valorFactura","dec","<?= $this->language->_("*El valor de factura debe ser numérico")?>");

	frmvalidator.addValidation("DESnroDoc","req","<?= $this->language->_("*Ingrese un nÃºmero de despacho")?>");
	frmvalidator.addValidation("DESnroDoc","alnum","<?= $this->language->_("*El nÃºmero de despacho debe ser numÃ©rico")?>");

	frmvalidator.addValidation("docTransporte","req","<?= $this->language->_("*Ingrese una documentacion de transporte")?>");
	frmvalidator.addValidation("docTransporte","alnum_s","<?= $this->language->_("*La documentacion de transporte debe ser alfanumérica")?>");

	frmvalidator.addValidation("DESdeclaracion","req","<?= $this->language->_("*Ingrese una descripción de declaracion")?>");
	frmvalidator.addValidation("DESdeclaracion","alnum_s","<?= $this->language->_("*La descripción de declaracion debe ser alfanumérica")?>");

	frmvalidator.addValidation("idDESSalido","req","<?= $this->language->_("*Ingrese la fecha del despacho salido")?>");
	frmvalidator.addValidation("idDESSalido","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$","<?= $this->language->_("*La fecha del despacho salido es inválida")?>");

	frmvalidator.addValidation("idDESPresentado","req","<?= $this->language->_("*Ingrese la fecha del despacho presentado")?>");
	frmvalidator.addValidation("idDESPresentado","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$","<?= $this->language->_("*La fecha del despacho presentado es inválida")?>");

	frmvalidator.addValidation("idDESCargado","req","<?= $this->language->_("*Ingrese la fecha del despacho cargado")?>");
	frmvalidator.addValidation("idDEScargado","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$","<?= $this->language->_("*La fecha del despacho cargado es inválida")?>");		

</script>
