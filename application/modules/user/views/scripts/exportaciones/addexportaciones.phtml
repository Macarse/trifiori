<? if (isset($this->error)) { ?>
    <div class="error"><?= $this->error ?></div>
            <? } ?>
            <? if (isset($this->message)) { ?>
                <div class="msg"><?= $this->message ?></div>
                        <? } ?>
<script type="text/javascript">
		YAHOO.namespace("local.calendar");
		
		YAHOO.local.calendar.init = function() {
			var eLog = YAHOO.util.Dom.get("evtentries");
	
			YAHOO.local.calendar.fechaIngreso = new YAHOO.widget.Calendar("fechaIngreso","calFechaIngreso");
			YAHOO.local.calendar.fechaIngreso.selectEvent.subscribe(handlerCalFechaIngreso, YAHOO.local.calendar.fechaIngreso, true);
			
			YAHOO.local.calendar.vencimiento = new YAHOO.widget.Calendar("vencimiento","calVencimiento");
			YAHOO.local.calendar.vencimiento.selectEvent.subscribe(handlerCalVencimiento, YAHOO.local.calendar.vencimiento, true);
			
			YAHOO.local.calendar.ingpuerto = new YAHOO.widget.Calendar("ingpuerto","calIngPuerto");
			YAHOO.local.calendar.ingpuerto.selectEvent.subscribe(handlerCalIngPuerto, YAHOO.local.calendar.ingpuerto, true);
			
			YAHOO.local.calendar.perpre = new YAHOO.widget.Calendar("perpre","calPerPre");
			YAHOO.local.calendar.perpre.selectEvent.subscribe(handlerCalPerPre, YAHOO.local.calendar.perpre, true);
			
			YAHOO.local.calendar.fecfac = new YAHOO.widget.Calendar("fecfac","calFecFac");
			YAHOO.local.calendar.fecfac.selectEvent.subscribe(handlerCalPerFecFac, YAHOO.local.calendar.fecfac, true);
	
			YAHOO.local.calendar.fechaIngreso.render();
			YAHOO.local.calendar.vencimiento.render();
			YAHOO.local.calendar.ingpuerto.render();
			YAHOO.local.calendar.perpre.render();
			YAHOO.local.calendar.fecfac.render();
		}
		
		YAHOO.util.Event.onDOMReady(YAHOO.local.calendar.init);
</script>


<div style="clear:both"></div>
<? if (isset($this->error)) { ?>
    <div class="error"><?= $this->error ?></div>
<? } ?>
<div class="cformulario">
	<?= $this->exportacionAddForm ?>
</div>
<div id="calFechaIngreso" style="display:none;" class="ccalfechaingreso"></div>
<div id="calVencimiento" style="display:none;" class="ccalvencimiento"></div>
<div id="calIngPuerto" style="display:none;" class="ccalingpuerto"></div>
<div id="calPerPre" style="display:none;" class="ccalperpre"></div>
<div id="calFecFac" style="display:none;" class="ccalfecfac"></div>
<div id='form_errorloc' class='errors_js_forms'></div>
<script type="text/javascript">
        var mySchema = ["Resultset.Result","data","id"];
		
		// banderas
        var dataBanderas = new YAHOO.widget.DS_XHR("/user/banderas/getdata/", mySchema);
        dataBanderas.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteBanderas = new YAHOO.widget.AutoComplete("idnameBandera", "idbanderasautocomplete", dataBanderas);
        function fnCallback(e, args) {
            YAHOO.util.Dom.get("idcodBandera").value = args[2][1];
         }
        autocompleteBanderas.itemSelectEvent.subscribe(fnCallback);
		
		// transportes
		var dataTransportes = new YAHOO.widget.DS_XHR("/user/transportes/getdata/", mySchema);
        dataTransportes.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteTransportes = new YAHOO.widget.AutoComplete("idnameTransporte", "idtransportesautocomplete", dataTransportes);
        function fnCallbackTrans(e, args) {
            YAHOO.util.Dom.get("idcodTransporte").value = args[2][1];
         }
        autocompleteTransportes.itemSelectEvent.subscribe(fnCallbackTrans);
		
		// clientes
		var dataClientes = new YAHOO.widget.DS_XHR("/user/clientes/getdata/", mySchema);
        dataClientes.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteClientes = new YAHOO.widget.AutoComplete("idnameCliente", "idclientesautocomplete", dataClientes);
        function fnCallbackClie(e, args) {
            YAHOO.util.Dom.get("idcodCliente").value = args[2][1];
         }
        autocompleteClientes.itemSelectEvent.subscribe(fnCallbackClie);

		// monedas
		var dataMonedas = new YAHOO.widget.DS_XHR("/user/monedas/getdata/", mySchema);
        dataMonedas.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteMonedas = new YAHOO.widget.AutoComplete("idnameMoneda", "idmonedasautocomplete", dataMonedas);
        function fnCallbackMone(e, args) {
            YAHOO.util.Dom.get("idcodMoneda").value = args[2][1];
         }
        autocompleteMonedas.itemSelectEvent.subscribe(fnCallbackMone);
		
		// cargas
		var dataCargas = new YAHOO.widget.DS_XHR("/user/cargas/getdata/", mySchema);
        dataCargas.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteCargas = new YAHOO.widget.AutoComplete("idnameCarga", "idcargasautocomplete", dataCargas);
        function fnCallbackCarg(e, args) {
            YAHOO.util.Dom.get("idcodCarga").value = args[2][1];
         }
        autocompleteCargas.itemSelectEvent.subscribe(fnCallbackCarg);
		
		// destinaciones
		var dataDestinaciones = new YAHOO.widget.DS_XHR("/user/destinaciones/getdata/", mySchema);
        dataDestinaciones.responseType = YAHOO.widget.DS_XHR.TYPE_JSON;
        var autocompleteDestinaciones = new YAHOO.widget.AutoComplete("idnameDestinacion", "iddestautocomplete", dataDestinaciones);
        function fnCallbackDest(e, args) {
            YAHOO.util.Dom.get("idcodDestinacion").value = args[2][1];
         }
        autocompleteDestinaciones.itemSelectEvent.subscribe(fnCallbackDest);
		
		// validacion
		var frmvalidator  = new Validator("form");

		//habilito alert con mensajes
		frmvalidator.EnableOnPageErrorDisplaySingleBox();
		frmvalidator.EnableMsgsTogether();
		
		frmvalidator.addValidation("orden","req","*Ingrese el numero de orden");
		frmvalidator.addValidation("orden","numeric","<?= $this->language->_("*La orden debe ser unicamente numerica")?>");
				  
		frmvalidator.addValidation("nameTransporte","req","<?= $this->language->_("*Elija un transporte")?>");
		frmvalidator.addValidation("nameTransporte","alnum_s ","<?= $this->language->_("*El transporte debe ser alfanumerico")?>");
				  
		frmvalidator.addValidation("nameCliente","req","<?= $this->language->_("*Elija un cliente")?>");
		frmvalidator.addValidation("nameCliente","alpha_s","<?= $this->language->_("*El cliente debe ser alfanumerico")?>");

		frmvalidator.addValidation("nameBandera","req","<?= $this->language->_("*Elija una Bandera")?>");
		frmvalidator.addValidation("nameBandera","alpha_s","<?= $this->language->_("*La bandera debe contener solo letras")?>");

		frmvalidator.addValidation("nameMoneda","req","<?= $this->language->_("*Elija una moneda")?>");
		frmvalidator.addValidation("nameMoneda","alpha_s","<?= $this->language->_("*La moneda debe contener solo letras")?>");

		frmvalidator.addValidation("nameGiro","req","<?= $this->language->_("*Elija una destinacion")?>");
		frmvalidator.addValidation("nameGiro","alpha_s","<?= $this->language->_("*La destinacion debe contener solo letras")?>");

		frmvalidator.addValidation("nameCarga","req","<?= $this->language->_("*Elija una carga")?>");
		frmvalidator.addValidation("nameCarga","alnum","<?= $this->language->_("*La carga debe contener solo letras")?>");

		frmvalidator.addValidation("referencia","alnum_s","<?= $this->language->_("*La referencia debe ser alfanumerica")?>");

		frmvalidator.addValidation("fechaIngreso","req","<?= $this->language->_("*Ingrese una fecha de ingreso")?>");
		frmvalidator.addValidation("fechaIngreso","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$", "<?= $this->language->_("*La fecha de ingreso es invalida")?>");

		frmvalidator.addValidation("desMercaderias","req","<?= $this->language->_("*Ingrese una descripcion de mercaderia")?>");
		frmvalidator.addValidation("desMercaderias","alnum_s","<?= $this->language->_("*La descripcion de mercaderia debe ser alfanumerica")?>");

		frmvalidator.addValidation("valorFactura","num","<?= $this->language->_("*El valor de factura debe ser numerico")?>");

		frmvalidator.addValidation("vencimiento","req","<?= $this->language->_("*Ingrese un vencimiento")?>");
		frmvalidator.addValidation("vencimiento","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$", "<?= $this->language->_("*La fecha de vencimiento es invalida")?>");

		frmvalidator.addValidation("ingresoPuerto","req","<?= $this->language->_("*Ingrese un ingreso a puerto")?>");
		frmvalidator.addValidation("ingresoPuerto","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$", "<?= $this->language->_("*La fecha de ingreso a puerto es invalida")?>");

		frmvalidator.addValidation("PERnroDoc","req","<?= $this->language->_("*Ingrese un numero de permiso")?>");
		frmvalidator.addValidation("PERnroDoc","num","<?= $this->language->_("*El numero de permiso debe ser numerico")?>");
		
		frmvalidator.addValidation("PERpresentado","req","<?= $this->language->_("*Ingrese la fecha del permiso presentado")?>");
		frmvalidator.addValidation("PERpresentado","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$","<?= $this->language->_("*La fecha del permiso presentado es invalida")?>");

		frmvalidator.addValidation("PERfactura","alnum_s","<?= $this->language->_("*El permiso de factura debe ser alfanumerico")?>");

		frmvalidator.addValidation("PERfechaFactura","regexp=^(19|20)([0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$","<?= $this->language->_("*La fecha de la fecha del permiso de factura es invalida")?>");
		

</script>
